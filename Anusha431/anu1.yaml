AWSTemplateFormatVersion: 2010-09-09

Description: >
  This CloudFormation template deploys a basic VPC
  It deploys a VPC with 2 subnets (1 public, 1 private) across 2 Availability Zones
  A NAT Gateway is used to provide egress for private subnets.
  The VPC and subnets are exported for use by other stacks.

#Adding parameters
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  PublicSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the Availability Zone
    Type: String
    Default: 10.192.10.0/24

  PrivateSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the Availability Zone
    Type: String
    Default: 10.192.20.0/24

#Adding Resources
Resources:
# First, a VPC:
  AnushaVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

#Adding InternetGateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref AnushaVPC

#Adding Public and Private subnets
  AnushaPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AnushaVPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet

  AnushaPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AnushaVPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet

#Adding NATGateway EIP
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

#Adding NATGateway
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref AnushaPublicSubnet
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

#Adding Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AnushaVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

#Adding Public subnet to the public route table
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref AnushaPublicSubnet

#Adding Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AnushaVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

#Adding Private subnet to the private route table
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref AnushaPrivateSubnet

#Adding outputs
Outputs:
  AnushaVPC:
    Description: A reference to the created VPC
    Value: !Ref AnushaVPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [",", [!Ref AnushaPublicSubnet]]

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [",", [!Ref AnushaPrivateSubnet]]

  AnushaPublicSubnet:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref AnushaPublicSubnet

  AnushaPrivateSubnet:
    Description: A reference to the private subnet in the next Availability Zone
    Value: !Ref AnushaPrivateSubnet
